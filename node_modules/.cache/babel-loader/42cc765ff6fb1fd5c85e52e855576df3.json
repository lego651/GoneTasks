{"ast":null,"code":"import _classCallCheck from \"/Users/lego/_CodeBase/_vanishTask/todo-app1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lego/_CodeBase/_vanishTask/todo-app1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lego/_CodeBase/_vanishTask/todo-app1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lego/_CodeBase/_vanishTask/todo-app1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lego/_CodeBase/_vanishTask/todo-app1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lego/_CodeBase/_vanishTask/todo-app1/src/components/TodoInput.jsx\";\nimport React from 'react';\nimport './TodoInput.css';\n\nvar TodoInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoInput, _React$Component);\n\n  function TodoInput(props) {\n    var _this;\n\n    _classCallCheck(this, TodoInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoInput).call(this, props));\n    _this.state = {\n      value: \"test\"\n    };\n    return _this;\n  }\n\n  _createClass(TodoInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: function onClick() {\n          return _this2.addTodo(_this2.state.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \" Submit \"));\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      // console.log(\"change here\")\n      this.setState({\n        value: e.target.value\n      });\n    }\n  }, {\n    key: \"addTodo\",\n    value: function addTodo(todo) {\n      // console.log(\"TODO:\", todo)\n      // Ensure the todo text isn't empty\n      if (todo.length > 0) {\n        this.props.addTodo(todo);\n        this.setState({\n          value: \"\"\n        });\n      }\n    }\n  }]);\n\n  return TodoInput;\n}(React.Component);\n\nexport { TodoInput as default };","map":{"version":3,"sources":["/Users/lego/_CodeBase/_vanishTask/todo-app1/src/components/TodoInput.jsx"],"names":["React","TodoInput","props","state","value","handleChange","bind","addTodo","e","setState","target","todo","length","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,iBAAP;;IAEqBC,S;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAFiB;AAKlB;;;;6BACQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAArC;AAA4C,QAAA,QAAQ,EAAE,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,OAAL,CAAa,MAAI,CAACJ,KAAL,CAAWC,KAAxB,CAAN;AAAA,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF;AAMD;;;iCACYI,C,EAAG;AACd;AACA,WAAKC,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAEI,CAAC,CAACE,MAAF,CAASN;AAAjB,OAAd;AACD;;;4BACOO,I,EAAM;AACZ;AACA;AACA,UAAGA,IAAI,CAACC,MAAL,GAAc,CAAjB,EAAoB;AAClB,aAAKV,KAAL,CAAWK,OAAX,CAAmBI,IAAnB;AACA,aAAKF,QAAL,CAAc;AAACL,UAAAA,KAAK,EAAE;AAAR,SAAd;AACD;AACF;;;;EA1BoCJ,KAAK,CAACa,S;;SAAxBZ,S","sourcesContent":["import React from 'react'\n\nimport './TodoInput.css'\n\nexport default class TodoInput extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: \"test\"\n    }\n  }\n  render() {\n    return (\n      <div>\n        <input type=\"text\" value={this.state.value} onChange={this.handleChange.bind(this)} />\n        <button className=\"btn btn-primary\" onClick={() => this.addTodo(this.state.value)}> Submit </button>\n      </div>\n    )\n  }\n  handleChange(e) {\n    // console.log(\"change here\")\n    this.setState({value: e.target.value})\n  }\n  addTodo(todo) {\n    // console.log(\"TODO:\", todo)\n    // Ensure the todo text isn't empty\n    if(todo.length > 0) {\n      this.props.addTodo(todo)\n      this.setState({value: \"\"})\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}